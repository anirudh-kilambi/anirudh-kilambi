create or replace share CD_COMPASSGROUP_SOURCE_OUTBOUND;
create database if not exists COMPASSGROUP_SOURCE_OUTBOUND;
use database COMPASSGROUP_SOURCE_OUTBOUND;
create schema if not exists EATCLUB;
USE SCHEMA EATCLUB;

create or replace secure view EATCLUB_ALLERGENS(ID,NAME,IS_PREMIUM,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_ALLERGENS);

create or replace secure view EATCLUB_AUTH_USER(ID,USERNAME,IS_STAFF,IS_ACTIVE,LAST_LOGIN,DATE_JOINED) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_AUTH_USER);
create or replace secure view EATCLUB_COMPANIES(ID,NAME,LAST_MODIFIED,COMPANY_SIZE,DOMAIN,YEAR_FOUNDED,CREATED_AT,EC_ENVIRONMENT,UNIT_CUSTOMER_NUMBER) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_COMPANIES);
create or replace secure view EATCLUB_DELIVERY_LOCATIONS(LOCATION_PTR_ID,COMPANY_ID,EMAILS,SETTINGS,DEACTIVATION_DATE,MENU,DAY_PART) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_DELIVERY_LOCATIONS);
create or replace secure view EATCLUB_ITEMS(ID,ITEM,INTERNAL_NAME,SLUG,DESCRIPTION,RESTAURANT_DESCRIPTION,INGREDIENTS,MAIN,SIDE,PRICE,RESTAURANT_ID,ACTIVE,LAST_MODIFIED,SIDE_ITEM_COUNT,NUTRITION_INFOS,NUTRITION_TIP,NO_KNOWN_ALLERGENS,PRICE_PER_PORTION,IS_ALWAYS_TAXABLE,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_ITEMS);
create or replace secure view EATCLUB_ITEMS_ALLERGENS(ID,ITEM_ID,ALLERGEN_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_ITEMS_ALLERGENS);
create or replace secure view EATCLUB_ITEMS_TAGS(ID,ITEM_ID,TAG_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_ITEMS_TAGS);
create or replace secure view EATCLUB_LOCATIONS(ID,ADDRESS1,ADDRESS2,CITY,STATE,ZIP,COORDINATES_X,COORDINATES_Y,ACTIVE,NAME,COUNTY,REGION_ID,CREATED_AT,LAST_MODIFIED,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_LOCATIONS);
create or replace secure view EATCLUB_MAIN_OPERATOR(ID,LAST_MODIFIED,CREATED_AT,NAME,HAS_GLOBAL_ACCESS,SLUG,MAIN_COMPANY_ID,UNIT_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_MAIN_OPERATOR);
create or replace secure view EATCLUB_MAIN_REFUNDCATEGORY(ID,NAME,DESCRIPTION,ACTIVE,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_MAIN_REFUNDCATEGORY);
create or replace secure view EATCLUB_MAIN_REGION(LAST_MODIFIED,CREATED_AT,ID,NAME,LAT_MAX,LAT_MIN,LON_MAX,LON_MIN,TIMEZONE,SHORT_NAME,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_MAIN_REGION);
create or replace secure view EATCLUB_MENUS(ID,DATE,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_MENUS);
create or replace secure view EATCLUB_MENUS_ITEMS(ID,MENU_ID,ITEM_ID,CREATED_AT,LAST_MODIFIED,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_MENUS_ITEMS);
create or replace secure view EATCLUB_ORDERS(ID,USER_ID,LOCATION_ID,DELIVERY_DATE,STATUS,ACCOUNTING_TYPE,SUB_TOTAL,PROMO_APPLIED,TAX,EXPIRED,ORDER_DATETIME,DELIVERED_AT,INVOICE_GROUP,PAYMENT_GROUP_ID,PAYMENT_GROUP_SUBTOTAL,PAYMENT_GROUP_TAX,TRANSACTION_ID,PERCENTAGE_PAID,COST,CREDIT_APPLIED,SUBSIDY_TYPE,SUBSIDIZED_SUB_TOTAL,LAST_MODIFIED,SOURCE,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_ORDERS);
create or replace secure view EATCLUB_ORDERS_ITEMS(ID,ITEM_ID,ORDER_ID,COUNT,PRICE,ITEM_PRICE,MENU_ID,SUBSIDIZED_PRICE,IS_FAVORITE,TAX_RATE,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_ORDERS_ITEMS);
create or replace secure view EATCLUB_REFUNDS(ID,CREATED_DATE,DESCRIPTION,ORDER_ID,USER_ID,REPORTING_USER_ID,TYPE,CANCELLED,AMOUNT,CATEGORY,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_REFUNDS);
create or replace secure view EATCLUB_RESTAURANTS(ID,NAME,PHONE,PUBLIC_PHONE,FAX,TEXT1,TEXT2,CONTACT,URL,SLUG,DESCRIPTION,SHORT_DESCRIPTION,CUISINE_TYPE,ACTIVE,BRAND_NAME,LAST_MODIFIED,LOCATION_ID,CREATED_AT,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_RESTAURANTS);
create or replace secure view EATCLUB_REVIEWS_REVIEW(ID,LAST_MODIFIED,CREATED_AT,RATING,COMMENT,ORDER_ITEM_ID,EXCLUDE,ITEM_ID,BAD_EXPERIENCE,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_REVIEWS_REVIEW);
create or replace secure view EATCLUB_TAGS(ID,VALUE,CUSTOMER_VISIBLE,TAG_TYPE_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_TAGS);
create or replace secure view EATCLUB_TAG_TYPES(ID,TYPE) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_TAG_TYPES);
create or replace secure view EATCLUB_ORDERS(ID,USER_ID,LOCATION_ID,DELIVERY_DATE,STATUS,ACCOUNTING_TYPE,SUB_TOTAL,PROMO_APPLIED,TAX,EXPIRED,ORDER_DATETIME,DELIVERED_AT,INVOICE_GROUP,PAYMENT_GROUP_ID,PAYMENT_GROUP_SUBTOTAL,PAYMENT_GROUP_TAX,TRANSACTION_ID,PERCENTAGE_PAID,COST,CREDIT_APPLIED,SUBSIDY_TYPE,SUBSIDIZED_SUB_TOTAL,LAST_MODIFIED,SOURCE,OPERATOR_ID) as (select * from DATAOPS_SOURCE.EATCLUB.EATCLUB_ORDERS);

create schema if not exists POS_ORDERS;
use schema POS_ORDERS;

create or replace secure view MOBILE_ORDERS(ID,GRAIN_LVL,ORDERID,ITEMID,CLEANSED_TIER_1,CLEANSED_TIER_2,CLEANSED_TIER_3,CLEANSED_TIER_4,OPTIONID,MENUITEM_GROUPLABEL,MENUITEMNAME,SPECIAL_INSTRUCTIONS,ORDER_ORIGIN,BRANDNAME,ORDERTIME_UTC,ORDERTIME,ORDERDATE,CA_FISCAL_YR,CA_FISCAL_QUARTER,CA_FISCAL_PERIOD_NAME,CA_FISCAL_WEEK_NAME,US_FISCAL_YR,US_FISCAL_QUARTER,US_FISCAL_PERIOD_NAME,US_FISCAL_WEEK_NAME,CUSTOMERID,CUSTOMER_ID,PICKUPNAME,PICKUPTIME_UTC,PICKUPTIME,PICKUPDATE,APPNAME,SECTOR,STATIC_LOCATIONNAME,UNITNUMBER,ORG_UNIT_KEY,ERP_SYSTEM_ID,UNITNAME,GROUPNUMBER,GROUPNAME,LOCATIONID,SITENAME,STOREID,ETL_SOURCE_SYSTEM,COUNTRY,TIMEZONE,ISSITELIVE,PAYMENTTYPE,MEALPLANNAME,DELIVERYORDERTYPE,DELIVERYAREANAME,DELIVERYSTARTTIMELOCAL,DELIVERYENDTIMELOCAL,PROMOCODE,PROMODISCOUNTTYPE,PROMOAMOUNTOFF,PROMOMAXAMOUNTOFF,DISCOUNTCODE,DISCOUNTTYPE,DISCOUNTPERCENTOFF,ORDERTOTALAMOUNT,ORDERNETSALES,ORDERLOYALTYAMOUNT,ORDERPROMOAMOUNT,ORDERDISCOUNTAMOUNT,ITEMQUANTITY,ITEMNETSALES,SERVICEFEEAMOUNT,DELIVERYFEEAMOUNT,CURRENCY,SERVICEFEEAMOUNT_CAD,SERVICEFEEAMOUNT_USD,DELIVERYFEEAMOUNT_USD,DELIVERYFEEAMOUNT_CAD,ITEMNETSALES_CAD,ITEMNETSALES_USD,ORDERPROMOAMOUNT_CAD,ORDERPROMOAMOUNT_USD,CAD_RATE,CAD_AGAINST_USD,TRANSACTIONTYPE,ISTESTORDER,SOURCEDB,BRANDID,ORDER_FULFILLMENT_STATUS,ITEMDISCOUNTSUBTOTAL,ITEMPROMOSUBTOTAL,ITEMSUBTOTAL,ORDERTAXAMOUNT,MULTIBRAND,ETL_EXTRACT_TIMESTAMP) as (select * from DATAOPS_EDW.DATASTORE.mobile_orders);
create or replace secure view POS_CA(SEGMENT,SECTOR,ORDER_PK,STOREID,STORENAME,STORE_DESCRIPTION,STORE_ADDRESS,STORE_CITY,STORE_PROVINCE,STORE_POSTAL_CODE,COUNTRY,LAST_SYNCH_TIME,TRANSID,TRANSITEMID,MENUITEMID,CDL_CLEANED_BRAND,INTERNAL_EXTERNAL_FLAG,CORE_CONCEPT_BRAND_FLAG,MENUITEMNAME,SCANCODE,PRICE_MODIFIER_NAMES,ISCOMBOITEM,COMBO_NAME,DIVISIONNAME,PLU,GROUPID,GROUPNAME,CATEGORYNAME,MMI,CLEANSED_TIER_1,CLEANSED_TIER_2,CLEANSED_TIER_3,CLEANSED_TIER_4,CLEANSED_ITEM_BRAND,QUANTITY,SINGLEITEMPRICE,PRICEMODAMOUNT,ENTEREDTIME,CA_FISCAL_YR,CA_FISCAL_QUARTER_NAME,CA_FISCAL_PERIOD_NAME,CA_FISCAL_WEEK_NAME,US_FISCAL_YR,US_FISCAL_QUARTER_NAME,US_FISCAL_PERIOD_NAME,US_FISCAL_WEEK_NAME,ITEMNETAMOUNT,TERMINALID,TERMINALNAME,ORDER_TYPE,LASTMODIFIEDDTTM,ORDER_DESTINATION,PAYMENT_TYPE,DISCOUNT_STATUS,MODIFIER_STATUS,TRANSACTION_STATUS,ITEM_TYPE,POS_SOURCE) as select * from DATAOPS_EDW.DATAMART.POS_CA;

create schema if not exists DATASTORE;
use schema DATASTORE;
create or replace secure view MOBILE_ORDERS(ID,GRAIN_LVL,ORDERID,ITEMID,CLEANSED_TIER_1,CLEANSED_TIER_2,CLEANSED_TIER_3,CLEANSED_TIER_4,OPTIONID,MENUITEM_GROUPLABEL,MENUITEMNAME,SPECIAL_INSTRUCTIONS,ORDER_ORIGIN,BRANDNAME,ORDERTIME_UTC,ORDERTIME,ORDERDATE,CA_FISCAL_YR,CA_FISCAL_QUARTER,CA_FISCAL_PERIOD_NAME,CA_FISCAL_WEEK_NAME,US_FISCAL_YR,US_FISCAL_QUARTER,US_FISCAL_PERIOD_NAME,US_FISCAL_WEEK_NAME,CUSTOMERID,CUSTOMER_ID,PICKUPNAME,PICKUPTIME_UTC,PICKUPTIME,PICKUPDATE,APPNAME,SECTOR,STATIC_LOCATIONNAME,UNITNUMBER,ORG_UNIT_KEY,ERP_SYSTEM_ID,UNITNAME,GROUPNUMBER,GROUPNAME,LOCATIONID,SITENAME,STOREID,ETL_SOURCE_SYSTEM,COUNTRY,TIMEZONE,ISSITELIVE,PAYMENTTYPE,MEALPLANNAME,DELIVERYORDERTYPE,DELIVERYAREANAME,DELIVERYSTARTTIMELOCAL,DELIVERYENDTIMELOCAL,PROMOCODE,PROMODISCOUNTTYPE,PROMOAMOUNTOFF,PROMOMAXAMOUNTOFF,DISCOUNTCODE,DISCOUNTTYPE,DISCOUNTPERCENTOFF,ORDERTOTALAMOUNT,ORDERNETSALES,ORDERLOYALTYAMOUNT,ORDERPROMOAMOUNT,ORDERDISCOUNTAMOUNT,ITEMQUANTITY,ITEMNETSALES,SERVICEFEEAMOUNT,DELIVERYFEEAMOUNT,CURRENCY,SERVICEFEEAMOUNT_CAD,SERVICEFEEAMOUNT_USD,DELIVERYFEEAMOUNT_USD,DELIVERYFEEAMOUNT_CAD,ITEMNETSALES_CAD,ITEMNETSALES_USD,ORDERPROMOAMOUNT_CAD,ORDERPROMOAMOUNT_USD,CAD_RATE,CAD_AGAINST_USD,TRANSACTIONTYPE,ISTESTORDER,SOURCEDB,BRANDID,ORDER_FULFILLMENT_STATUS,ITEMDISCOUNTSUBTOTAL,ITEMPROMOSUBTOTAL,ITEMSUBTOTAL,ORDERTAXAMOUNT,MULTIBRAND,ETL_EXTRACT_TIMESTAMP) as SELECT * FROM DATAOPS_EDW.DATASTORE.MOBILE_ORDERS;

create schema if not exists LASERFICHE_EUREST;
use schema LASERFICHE_EUREST;

create or replace secure view ACCOUNT_CACHE(ACCOUNT_SID,ACCOUNT_NAME,FRIENDLY_NAME,ORGANIZATION,ISUSER,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ACCOUNT_CACHE);
create or replace secure view ACCOUNT_SECURITY(SID,PRIVS,UIF,AUDITMASK,READONLY,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ACCOUNT_SECURITY);
create or replace secure view ACTIVE_DOC(TOCID,WHO,PREDECESSOR,CHECKED_OUT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ACTIVE_DOC);
create or replace secure view ACTIVITY_LOG(ASN,WHO,EVENT,PATH1,PATH2,UUID1,UUID2,UUID3,TOCID1,TOCID2,TOCID3,ETYPE,OLD_OBJ_NAME,NEW_OBJ_NAME,OLD_OBJ_ID,NEW_OBJ_ID,PROP_NAME,PROP_ID,FLAGS,EVENTS,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ACTIVITY_LOG);
create or replace secure view ALTEDOC(TOCID,STOREID,ALTEDOC_NAME,ALTEDOC_MIME,ALTEDOC_SIZE,ALTEDOC_ETAG,ALTEDOC_SHARED,ALTEDOC_FLAGS,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ALTEDOC);
create or replace secure view ANNACCESS(ANN_ID,SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ANNACCESS);
create or replace secure view ANNHIST(ANN_ID,REVISION,CREATOR,CREATED,NOTE_TEXT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ANNHIST);
create or replace secure view ANNPOINT(ANN_ID,POS,X,Y,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ANNPOINT);
create or replace secure view ANNRECT(ANN_ID,POS,X1,Y1,X2,Y2,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ANNRECT);
create or replace secure view ANN_REASON(ANN_REASON_ID,REASON_TEXT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ANN_REASON);
create or replace secure view AUDITLOGS(LOGNAME,TEMPNAME,LOG_UUID,STARTDATE,ENDDATE,LOGSIZE,COMPRESSED_SIZE,FIRST_EVENT,LAST_EVENT,LOG_STATE,LOG_VERSION,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.AUDITLOGS);
create or replace secure view AUDITLOG_INDEX(LOG_POS,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.AUDITLOG_INDEX);
create or replace secure view AUDIT_REASON_CHOICES(REASON_ID,EVENT_TYPE,SID,REASON,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.AUDIT_REASON_CHOICES);
create or replace secure view BIZPROC(BIZPROC_ID,BIZPROC_NAME,BIZPROC_VERSION,BIZPROC_SECPOL,BIZPROC_STARTINS,BIZPROC_DEFN,BIZPROC_SOURCE,BIZPROC_NEXECS,BIZPROC_AVGDUR,BIZPROC_MAXDUR,BIZPROC_FLAGS,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.BIZPROC);
create or replace secure view BIZPROC_ENTITY(BPE_ID,BPE_BIZPROC_ID,BPE_NAME,BPE_SOURCE_ID,BPE_STATUS,BPE_START_DATE,BPE_END_DATE,BPE_USERINS,BPE_PARENT_ID,BPE_LASTMOD,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.BIZPROC_ENTITY);
create or replace secure view BIZPROC_ENTITY_ENTRY(BPE_ID,TOCID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.BIZPROC_ENTITY_ENTRY);
create or replace secure view BIZPROC_ENTITY_TRUSTEE(BPE_ID,SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.BIZPROC_ENTITY_TRUSTEE);
create or replace secure view CERTIFICATE_STORE(THUMBPRINT,SERIAL,ALGORITHM,ISSUER,SUBJECT,VALID_FROM,VALID_TO,RAW_DATA,SID,KEY_SIZE,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.CERTIFICATE_STORE);
create or replace secure view COFF(COFF_ID,COFF_NAME,COFF_TYPE,CYCLE,ANY_EVENT,TRIGGER_LINK_ID,TRIGGER_DISP_ACT,TRIGGER_LOCATION_ID,COFF_DESCRIP,INTERVAL,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.COFF);
create or replace secure view COFF_EVENTS(COFF_ID,EVENT_ID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.COFF_EVENTS);
create or replace secure view CUSTOM_AUDIT_REASONS(REASON_ID,LABEL,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.CUSTOM_AUDIT_REASONS);
create or replace secure view DBOPTIONS(OPTIONNAME,OPTIONVALUE,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.DBOPTIONS);
create or replace secure view DBPROP(PROP_KEY,PROP_VAL,PROP_PASSWORD,PROP_SALT,PROP_PASS_SCOPE,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.DBPROP);
create or replace secure view DEFAULTACL(OTYPE,POS,ACE_TYPE,MASK,SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.DEFAULTACL);
create or replace secure view DELETEDELEC(VOL_ID,STOREID,ALTEDOC_NAME,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.DELETEDELEC);
create or replace secure view DELETEDPAGE(VOL_ID,STOREID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.DELETEDPAGE);
create or replace secure view DELETED_VER(TOCID,VERSION,WHO,DELETED,DEL_COMMENT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.DELETED_VER);
create or replace secure view DISP_SCHED(DISP_SCHED_ID,DISP_SCHED_NAME,DISP_SCHED_CODE,RETENTION,FINAL_DISP,FINAL_LOCID,FINAL_KEEP,ALT_TRIGGER_ID,ALT_SCHED_ID,DISP_SCHED_DESCRIP,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.DISP_SCHED);
create or replace secure view DOC(TOCID,PAGENUM,STOREID,PAGE_ID,PAGE_FLAGS,PAGE_SHARED,IMG_SIZE,TXT_SIZE,LOC_SIZE,LFT_SIZE,IMG_ETAG,TXT_ETAG,LOC_ETAG,LFT_ETAG,IMG_WIDTH,IMG_HEIGHT,IMG_XDPI,IMG_YDPI,IMG_BPP,IMG_CKSUM,OLD_PAGENUM,DELETED,DELETER,NATIVE_LANGUAGE,ORIG_PARENT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.DOC);
create or replace secure view DOCUMENT_SIGNATURES(SIG_ID,TOCID,VERSION,SIGNED_BY,ALGORITHM,SIG_DATE,SIG_COMMENT,SIG_VALUE,SIG_IMAGE,SIG_IMAGE_MIME,PUBLIC_KEY,CERT_THUMBPRINT,CERT_SUBJECT,DIGITAL_TIMESTAMP,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.DOCUMENT_SIGNATURES);
create or replace secure view DOCUMENT_SIGNATURE_TARGETS(SIG_ID,TARGET_SIG_ID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.DOCUMENT_SIGNATURE_TARGETS);
create or replace secure view ELECTYPE(MIMETYPE,EXT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ELECTYPE);
create or replace secure view ENTRYACL(TOCID,POS,ACE_TYPE,ACE_FLAGS,MASK,SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ENTRYACL);
create or replace secure view ENTRY_LINK(ENTRY_LINK_ID,LINK_ID,SOURCE_ID,TARGET_ID,ELINK_DESCRIP,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ENTRY_LINK);
create or replace secure view ENTRY_LINK_PROP(ENTRY_LINK_ID,PROP_NAME,PROP_VALUE,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ENTRY_LINK_PROP);
create or replace secure view ENTRY_TAG(TOCID,TAG_ID,ET_DESCRIP,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.ENTRY_TAG);
create or replace secure view EVENT_DEF(EVENT_ID,EVENT_NAME,EVENT_DESCRIP,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.EVENT_DEF);
create or replace secure view EXTENSION_CACHE(EXT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.EXTENSION_CACHE);
create or replace secure view EXTERNAL_DB(LFE_ID,LFE_NAME,EXT_DB_NAME,EXT_SCHEMA,EXT_TBL_NAME,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.EXTERNAL_DB);
create or replace secure view FREEZE(FREEZE_REASON,FREEZE_END_DATE,FREEZEID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.FREEZE);
create or replace secure view FROZEN(TOCID,ROOT_ID,PATH,FREEZEID,FREEZE_DATE,FREEZER,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.FROZEN);
create or replace secure view GROUPLIST(GROUP_ID,MEMBER_ID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.GROUPLIST);
create or replace secure view INDEX_QUEUE(TIME_STAMP,TOCID,TYPE,MID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.INDEX_QUEUE);
create or replace secure view JOURNAL(JOURNAL_ID,JOURNAL_NAME,JOURNAL_OBJID,JOURNAL_OBJTYPE,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.JOURNAL);
create or replace secure view JOURNAL_ENTRY(JENTRY_ID,JOURNAL_ID,JENTRY_TIMESTAMP,JENTRY_SCHEMA,JENTRY_TEXT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.JOURNAL_ENTRY);
create or replace secure view KEYS(KEY_GUID,ALGORITHM_ID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.KEYS);
create or replace secure view KEY_PASSWORDS(KEY_PASSWORD_GUID,KEY_GUID,NAME,PBKDF_ALGORITHM_ID,FULL_ENCRYPTION_ALGORITHM_ID,HMAC_ALGORITHM_ID,SALT,ITERATIONS,BLOB,BLOB_AUTH_TAG,BLOB_NONCE,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.KEY_PASSWORDS);
create or replace secure view LDAP_ALLOW(SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.LDAP_ALLOW);
create or replace secure view LDAP_DENY(SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.LDAP_DENY);
create or replace secure view LDAP_SERVER_PROFILES(PROFILE_ID,PROFILE_NAME,SERVER_NAME,DN_BASE,UNIQUE_ATTR,FLAGS,PORT,SCHEMA_TYPE,AUTH_TYPE,LFS_USERNAME,LFS_AUTH_DATA,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.LDAP_SERVER_PROFILES);
create or replace secure view LFQL_SCHEMA_COLUMNS(TABLE_CATALOG,TABLE_SCHEMA,TABLE_NAME,COLUMN_NAME,ORDINAL_POSITION,COLUMN_DEFAULT,IS_NULLABLE,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH,CHARACTER_OCTET_LENGTH,NUMERIC_PRECISION,NUMERIC_PRECISION_RADIX,NUMERIC_SCALE,DATETIME_PRECISION,CHARACTER_SET_CATALOG,CHARACTER_SET_SCHEMA,CHARACTER_SET_NAME,COLLATION_CATALOG,COLLATION_SCHEMA,COLLATION_NAME,DOMAIN_CATALOG,DOMAIN_SCHEMA,DOMAIN_NAME,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.LFQL_SCHEMA_COLUMNS);
create or replace secure view LFQL_SCHEMA_TABLES(TABLE_CATALOG,TABLE_SCHEMA,TABLE_NAME,TABLE_TYPE,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.LFQL_SCHEMA_TABLES);
create or replace secure view LFT(PAGEID,DATA,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.LFT);
create or replace secure view LINK_TYPE(LINK_ID,SOURCE_LABEL,TARGET_LABEL,LINK_DESCRIP,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.LINK_TYPE);
create or replace secure view LOC(PAGEID,DATA,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.LOC);
create or replace secure view LOCATION(LOCATION_ID,LOCATION_NAME,ADDRESS,EMAIL1,EMAIL2,PHONE1,PHONE2,FAX,CONTACT1,CONTACT2,LOCATION_DESCRIP,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.LOCATION);
create or replace secure view LUP(PROP_ID,LIST_POS,LIST_VAL,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.LUP);
create or replace secure view OBJ_PROP(OBJ_ID,OBJ_TYPE,PROP_NAME,PROP_VALUE,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.OBJ_PROP);
create or replace secure view PASSWORD_HISTORY(SID,LAST_USED,PASSWORD,SALT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PASSWORD_HISTORY);
create or replace secure view PERIOD(PERIOD_ID,ORDINAL,PERIOD_DESCRIP,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PERIOD);
create or replace secure view PERIOD_CODE(PERIOD_ID,KIND,PC_CODE,PC_DESCRIP,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PERIOD_CODE);
create or replace secure view PLOCK(TOKEN,TOCID,OWNER,CREATED,EXPIRE,LO_ASN,HI_ASN,ACTIVITY_COUNT,ACTIVITY_FLAGS,IS_EXCLUSIVE,AUTO_CHECKIN,AUTO_DEL,CREATION,COMMENT_TEXT,LOCK_EXTENT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PLOCK);
create or replace secure view PROPACL(PROP_ID,POS,ACE_TYPE,MASK,SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PROPACL);
create or replace secure view PROPDEF(PROP_ID,PROP_NAME,PROP_TYPE,PROP_FLAGS,PROP_LEN,PROP_DESCRIP,CONDITION,CONDITION_ERR,PROP_FORMAT,PROP_CURRENCY,PROP_PATTERN,DEF_STR,DEF_NUM,DEF_DATE,DEF_BIN,SPNAME,DISPLAY_NAME,SOURCE_ID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PROPDEF);
create or replace secure view PROPSET(PSET_ID,PSET_NAME,PSET_DESCRIP,PSET_COLOR,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PROPSET);
create or replace secure view PROPVAL(TOCID,PROP_ID,POS,STR_VAL,SHORT_STR_VAL,NUM_VAL,DATE_VAL,BIN_VAL,POS2,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PROPVAL);
create or replace secure view PSETACL(PSET_ID,POS,ACE_TYPE,MASK,SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PSETACL);
create or replace secure view PSET_PROPS(PSET_ID,PROP_ID,PROP_POS,GROUP_ID,FLAGS,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PSET_PROPS);
create or replace secure view PSET_PROP_GROUP(PSET_ID,GROUP_ID,GROUP_NAME,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PSET_PROP_GROUP);
create or replace secure view PSET_RULE(PSET_RULE_ID,PSET_ID,PROP_ID,DO_VALIDATE,LFE_ID,BOUND_COLUMN,SORT_COLUMN,SORT_ASC,REQUIRED,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PSET_RULE);
create or replace secure view PSET_RULE_PARENT(PSET_RULE_ID,PARENT_ID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PSET_RULE_PARENT);
create or replace secure view PSET_RULE_QUERY(PSET_RULE_ID,RULE_POS,QUERY_COND,QUERY_RULE,REQUIRED,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.PSET_RULE_QUERY);
create or replace secure view QUERYCONTAIN(TOCID,RSID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.QUERYCONTAIN);
create or replace secure view RECYCLE_BIN(TOCID,ORIG_PARENT,ORIG_NAME,DELETED,DELETER,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.RECYCLE_BIN);
create or replace secure view RECYCLE_ELEC(TOCID,VOL_ID,EDOC_STOREID,EDOC_SIZE,EDOC_SHARED,EDOC_ETAG,EDOC_MIME,EDOC_EXT,EDOC_CKSUM,EDOC_LASTMOD,DELETED,DELETER,ORIG_PARENT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.RECYCLE_ELEC);
create or replace secure view RELEVANCY(ID,RANKING,RSID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.RELEVANCY);
create or replace secure view RF_EVENTS(TOCID,EVENT_ID,EVENT_DATE,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.RF_EVENTS);
create or replace secure view SEARCHRESULT(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT);
create or replace secure view SEARCHRESULT0(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT0);
create or replace secure view SEARCHRESULT1(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT1);
create or replace secure view SEARCHRESULT10(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT10);
create or replace secure view SEARCHRESULT11(TOCID,RSID,HITCOUNT,ETYPE,PARENTID,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT11);
create or replace secure view SEARCHRESULT12(TOCID,RSID,HITCOUNT,ETYPE,PARENTID,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT12);
create or replace secure view SEARCHRESULT13(TOCID,RSID,HITCOUNT,ETYPE,PARENTID,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT13);
create or replace secure view SEARCHRESULT2(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT2);
create or replace secure view SEARCHRESULT3(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT3);
create or replace secure view SEARCHRESULT4(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT4);
create or replace secure view SEARCHRESULT5(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT5);
create or replace secure view SEARCHRESULT6(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT6);
create or replace secure view SEARCHRESULT7(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT7);
create or replace secure view SEARCHRESULT8(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT8);
create or replace secure view SEARCHRESULT9(TOCID,RSID,HITCOUNT,PARENTID,ETYPE,ACL_TOCID,VOL_ID,PATH,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCHRESULT9);
create or replace secure view SEARCH_PLAN_LIBRARY(SEARCH_PLAN_ID,SEARCH_PLAN_NAME,SEARCH_PLAN_QUERY,SEARCH_PLAN,SEARCH_PLAN_FLAGS,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SEARCH_PLAN_LIBRARY);
create or replace secure view SECCLASS_LEVEL(SECCLASS_LEVEL_ID,SECCLASS_LEVEL_NAME,SECCLASS_LEVEL_DESCRIP,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SECCLASS_LEVEL);
create or replace secure view SERIES(TOCID,SERIES_CODE,ISPERM,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SERIES);
create or replace secure view SESS_SID(SESS_ID,SID,ISUSER,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SESS_SID);
create or replace secure view SESS_TAG(SESS_ID,TAG_ID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.SESS_TAG);
create or replace secure view STAMP(STAMP_ID,STAMP_NAME,STAMP_OWNER,STAMP_IMAGE,IS_HIDDEN,DATA1,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.STAMP);
create or replace secure view TAG(TAG_ID,TAG_NAME,TAG_DESCRIP,IS_SECURE,WM_TEXT,WM_X,WM_Y,WM_ANGLE,WM_SIZE,WM_REQUIRED,WM_INTENSITY,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TAG);
create or replace secure view TAGACL(TAG_ID,POS,ACE_TYPE,MASK,SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TAGACL);
create or replace secure view TOC as (select * from dataops_source.laserfiche_eurest.toc)
create or replace secure view TOCGEO(TOCID,GEO1,TEXT1,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TOCGEO);
create or replace secure view TOC_TRANSFERS(TOCID,TRANSFER_ID,TRANSFER_ELIG,TRANSFER_DATE,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TOC_TRANSFERS);
create or replace secure view TO_RECYCLE(SESS_ID,TOCID,PARENTID,PATH,ETYPE,UUID,PARENT_UUID,LINKTO,TARGET_TYPE,TARGET_UUID,ORD,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TO_RECYCLE);
create or replace secure view TO_RESTORE(SESS_ID,TOCID,PARENTID,PATH,ETYPE,UUID,ORD,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TO_RESTORE);
create or replace secure view TRANSFER(TRANSFER_ID,DISP_SCHED_ID,ORDINAL,ACTION,RETENTION,LOCATION_ID,XFER_DESCRIP,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TRANSFER);
create or replace secure view TRUSTED_ALLOW(SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TRUSTED_ALLOW);
create or replace secure view TRUSTED_DENY(SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TRUSTED_DENY);
create or replace secure view TRUSTED_GROUP(SID,TRUSTEE_ID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TRUSTED_GROUP);
create or replace secure view TRUSTED_LOGIN(SID,USERID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TRUSTED_LOGIN);
create or replace secure view TRUSTEE(TRUSTEE_ID,SID,TRUSTEE_NAME,ISUSER,TRUSTEE_FLAGS,DESCRIP,PASSWORD,SALT,LAST_PWCHANGE,LAST_ACTIVE,BAD_LOGINS,TEMP_PASS,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TRUSTEE);
create or replace secure view TRUSTEE_ATTR(SID,ATTR_NAME,ATTR_VAL,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TRUSTEE_ATTR);
create or replace secure view TRUSTEE_TAG(SID,TAG_ID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.TRUSTEE_TAG);
create or replace secure view UAREA_ENTRY(UAREA_ID,TOCID,UAREA_ENTRY_MODIFIED,UAREA_ENTRY_COMMENT,UAREA_ENTRY_DATA,UAREA_ENTRY_POS,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.UAREA_ENTRY);
create or replace secure view UPLOADFILE(FILE_NAME,MIMETYPE,FILE_SIZE,CREATED,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.UPLOADFILE);
create or replace secure view USER_AREA(UAREA_ID,UAREA_OWNER,UAREA_NAME,USER_AREA_COMMENT,USER_AREA_DATA,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.USER_AREA);
create or replace secure view USER_LOGIN(SID,LAST_LOGIN,LAST_LOGOUT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.USER_LOGIN);
create or replace secure view VERLABEL(TOCID,LABEL,VERSION,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VERLABEL);
create or replace secure view VERSION_GROUP(VGROUP_ID,VERSION,TOCID,NOTES,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VERSION_GROUP);
create or replace secure view VERTREE(TOCID,VERSION,SUCCESSOR,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VERTREE);
create or replace secure view VHIST_ALTEDOC(TOCID,VERSION,STOREID,ALTEDOC_NAME,ALTEDOC_MIME,ALTEDOC_SIZE,ALTEDOC_ETAG,ALTEDOC_FLAGS,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VHIST_ALTEDOC);
create or replace secure view VHIST_ANN(TOCID,VERSION,ANN_ID,PAGENUM,ITEM_ID,ANN_TYPE,ANN_CREATOR,ANN_CREATED,ANN_LASTMOD,ANN_VISIBILITY,ANN_COMMENT,POS1,POS2,POS3,POS4,POS5,POS6,ROTATION,DIRECTION,COLOR1,COLOR2,COLOR3,THICKNESS,OPACITY,STYLE1,STYLE2,STYLE3,STAMP_ID,BITMAP,ATTACH_STOREID,ATTACH_MIME,ATTACH_SIZE,ATTACH_ETAG,ATTACH_FILENAME,ATTACH_ENCRYPT,ATTACH_COMPRESS,ATTACH_CKSUM,ANN_TEXT,ANN_TEXTSIZE,ANN_ACCESS,DATA1,ZORDER,ANN_REASON_ID,KEEPHIST,PROTECT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VHIST_ANN);
create or replace secure view VHIST_ANNACCESS(TOCID,VERSION,ANN_ID,SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VHIST_ANNACCESS);
create or replace secure view VHIST_ANNPOINT(TOCID,VERSION,ANN_ID,POS,X,Y,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VHIST_ANNPOINT);
create or replace secure view VHIST_ANNRECT(TOCID,VERSION,ANN_ID,POS,X1,Y1,X2,Y2,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VHIST_ANNRECT);
create or replace secure view VHIST_CHANGES(TOCID,VERSION,PAGES_ADDED,PAGES_DELETED,PAGES_IMG_CHANGED,PAGES_TXT_CHANGED,PROPS_ADDED,PROPS_DELETED,PROPS_CHANGED,ANNS_ADDED,ANNS_DELETED,ANNS_CHANGED,GEO_ADDED,GEO_DELETED,GEO_CHANGED,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VHIST_CHANGES);
create or replace secure view VHIST_DOC(TOCID,VERSION,PAGENUM,STOREID,PAGE_ID,PAGE_FLAGS,IMG_SIZE,TXT_SIZE,LOC_SIZE,LFT_SIZE,IMG_ETAG,TXT_ETAG,LOC_ETAG,LFT_ETAG,IMG_WIDTH,IMG_HEIGHT,IMG_XDPI,IMG_YDPI,IMG_BPP,IMG_CKSUM,NATIVE_LANGUAGE,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VHIST_DOC);
create or replace secure view VHIST_GEO(TOCID,VERSION,GEO,GEOTEXT,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VHIST_GEO);
create or replace secure view VHIST_PROPVAL(TOCID,VERSION,PROP_ID,POS,PROP_POS,STR_VAL,NUM_VAL,DATE_VAL,BIN_VAL,STATUS,PROP_GROUP_ID,POS2,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VHIST_PROPVAL);
create or replace secure view VHIST_TOC(TOCID,VERSION,CHECKED_IN,ETAG,WHO,TOC_FLAGS,TOC_COMMENT,PSET_ID,PSET_NAME,EDOC_SIZE,EDOC_STOREID,EDOC_ETAG,EDOC_MIME,EDOC_EXT,EDOC_CKSUM,EDOC_LASTMOD,NATIVE_LANGUAGE,MODIF_FLAGS,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VHIST_TOC);
create or replace secure view VOL(VOL_ID,VOL_NAME,VOL_FLAGS,LOCALID,FIXPATH,REMPATH,MAXSIZE,CURSIZE,CURDISKSIZE,VOL_DESCRIP,SOURCEVOL,CURPHYVOL,NEXTVOLNUM,VOL_CREATED,ROLLOVER_DATE,ROLLOVER_SCHEDULE,ROLLOVER_UNIT,ROLLOVER_BASE,ENCRYPTION_KEY_GUID,FULL_ENC_ALG_ID,CKSUM_ALG,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VOL);
create or replace secure view VOLACL(VOL_ID,POS,ACE_TYPE,MASK,SID,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VOLACL);
create or replace secure view VOL_UNAVAILABLE(VOL_ID,LAST_CHECK,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.VOL_UNAVAILABLE);
create or replace secure view WATERMARKS(SID,WATERMARK,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.WATERMARKS);
create or replace secure view WOPI_AT(ACCESS_TOKEN,TTL,SID,TOCID,TOC_VERSION,PERMS,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.WOPI_AT);
create or replace secure view WOPI_LOCK(TOCID,LOCK_ID,EXPIRES,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.WOPI_LOCK);
create or replace secure view WOPI_USER_INFO(TOCID,TOC_VERSION,SID,USER_INFO,ETL_ROW_HASH,ETL_EXTRACT_TIMESTAMP) as (select * from dataops_source.laserfiche_eurest.WOPI_USER_INFO);

create schema if not exists volante_morrison;
use schema volante_morrison;

create or replace secure view CUSTOMERS(ADDRESS1,ADDRESS2,CELLPHONE,CREATEDTTM,CUSTACCTTYPEGROUPS,CUSTCARDCODE,CUSTCODE,CUSTLEVEL,CUSTVALUE1,CUSTOMERID,CUSTOMERSYSTEMTYPE,CUTOMERSTATUS,DATEOFBIRTH,DELETED,EMAIL,EXPIRYDTTM,FIRSTNAME,GENDER,HOMEPHONE,LASTNAME,MODIFIEDTIME,NOTES,OLDCUSTID,PARENTCUSTID,STARTDTTM,UPDATECNT,UPDATESTAMP,WORKPHONE,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_START_DATE,ETL_RECORD_END_DATE,ETL_RECORD_STATUS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.CUSTOMERS);
create or replace secure view CUSTOMERS_ACCTBALLIST(CUSTOMERID,ACCTSTATUS,ACCTTYPEID,ACCTTYPENUM,BALANCE,CUSTOMERACCOUNTID,DELETED,LASTBALUPDATE,NUMACCTLINK,OVERRIDECREDITLIMIT,PARENTCUSTOMERID,TMPRUNNINGTOTBALCAL,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_START_DATE,ETL_RECORD_END_DATE,ETL_RECORD_STATUS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.CUSTOMERS_ACCTBALLIST);
create or replace secure view MENU_ITEMS as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.MENU_ITEMS);
create or replace secure view STORES(STOREID,STORENAME,TENANTID,DELETED,_TYPE,CUSTACCTTYPEGROUPS,STOREGRPID,UPDATECNT,SECTIONID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_START_DATE,ETL_RECORD_END_DATE,ETL_RECORD_STATUS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.STORES);
create or replace secure view TRANSLIST_CALC_TAXES(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,TRANSLIST_TAXID,TRANSLIST_EXEMPTED,TRANSLIST_TAXTOBEPAID,TRANSLIST_AMTEXEMPT,TRANSLIST_AMTTAXED,TRANSLIST_DISPLAYTAX,TRANSLIST_DISPLAYAMT,TRANSLIST_DISPLAYNAME,TRANSLIST_T,TRANSLIST_TENANTID_CALC_TAXES,TRANSLIST_STOREID_CALC_TAXES,TRANSLIST_DETAILS_TAXID,TRANSLIST_PERCENT,TRANSLIST_NAME,TRANSLIST_AMTPERQTY,TRANSLIST_APPLYONUNIT,TRANSLIST_APPLYGRATUITY,TRANSLIST_VIRTUALTAX,TRANSLIST_GROUPTAX,TRANSLIST_DETAILS_DISPLAYNAME,TRANSLIST_PRIORITY,TRANSLIST_UPDATECNT,APPLYSALETYPES,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANSLIST_CALC_TAXES);
create or replace secure view TRANSLIST_CALC_TAXES_PAYREC(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,TRANSLIST_TAXID,CALC_PAYREC_ACCTTYPEID,CALC_PAYREC_AMT,CALC_PAYREC_ASSOCIATEDSCTID,CALC_PAYREC_PAIDTOTAXID,CALC_PAYREC_PAYREC_PAIDTOTRANSITEMID,CALC_PAYREC_PAYMENTCATEGORYID,CALC_PAYREC_PAYMENTENTID,CALC_PAYREC_PAYMENTID,CALC_PAYREC_TARGETTYPE,CALC_PAYREC_TRANSDSCTID,CALC_PAYREC_TRANSPAYID,CALC_PAYREC_BRANDID,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANSLIST_CALC_TAXES_PAYREC);
create or replace secure view TRANSLIST_COMBOS(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,TRANSCOMBOID,COMBOS_NAME,COMBOS_DISPLAYNAME,COMBOS_TERMID,COMBOS_EMPID,COMBOS_GMTACTIONTIME,COMBOS_LOCALACTIONTIME,COMBOS_SHIFTID,COMBOS_CLOCKINACTIONID,COMBOS_COMBOGROUPID,ITEMS,QTY,CALC_COMBOGROUPID,PRICEADJUSTMENT,COMBOTOTAL,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANSLIST_COMBOS);
create or replace secure view TRANSLIST_DISCOUNTS(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,TENANTID_DSCNT_DTLS,STOREID_DSCNT_DTLS,DETAILS_DISCOUNTID,DETAILS_DSCTMODE,DISCOUNTS_DETAIL_NAME,DISCOUNTPERCENT,DISCOUNTAMTPERITEM,DISCOUNTGROUP,CASHBACK,REQUIREACCTNUM,REQUIRESIGNATURE,ALLOWADDTOPRICE,APPLYTOSUBITEMWITHOUTPARENT,APPLYTOCOMBO,APPLYTOGRATUITY,APPLYTOTAX,APPLYTOLOADACCT,APPLYTOLOADGIFTCARD,APPLYTOBILL,APPLYTOSINGLEITEM,PRIORITY,IGNOREITEMDISCOUNTABLE,DISCOUNTS_DETAILS_T,TRANSDSCTID,DISCOUNTID,DISCOUNTS_TRANSPAYID,DISCOUNTS_TERMID,DISCOUNTS_EMPID,DISCOUNTS_GMTACTIONTIME,DISCOUNTS_LOCALACTIONTIME,DISCOUNTS_SHIFTID,DISCOUNTS_CLOCKINACTIONID,DISCOUNTS_AUTHEMPID,DISCOUNTS_DEPTCODE,DISCOUNTS_COMPANYCODE,DISCOUNTS_CUSTCODE,DISCOUNTS_AMT,DSCTMODE,DISCOUNTS_VOIDTYPEID,MAXDISCOUNTAMT,APPLYTOITEMID,FIXEDENTIREBILL,OPENDISCOUNT,OPENDISCOUNTMAX,OPENDISCOUNTMIN,OPENDISCOUNTTYPE,DISCOUNTS_VOIDINFO_CLOCKINACTIONID,DISCOUNTS_VOIDINFO_EMPID,DISCOUNTS_VOIDINFO_GMTACTIONTIME,DISCOUNTS_VOIDINFO_LOCALACTIONTIME,DISCOUNTS_VOIDINFO_SHIFTID,DISCOUNTS_VOIDINFO_TERMID,MAXUSEPERBILL,MAXUSEPERITEM,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANSLIST_DISCOUNTS);
create or replace secure view TRANSLIST_ITEMS(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,TAXCATID,SUBITEM,TRANSITEMID,ITEMTYPEID,ITEMCATEGORYTYPEID,VOIDTYPEID,USERQTY,BASEPRICEQTY1,ENTERAUDIT_TERMID,ITEMS_EMPID,ITEMS_GMTACTIONTIME,ITEMS_LOCALACTIONTIME,ITEMS_SHIFTID,ITEMS_CLOCKINACTIONID,LEVEL,CUSTID,ITEMS_CHIT_STATUS,ITEMS_CLASS,ITEMS_T,RPTMID,PARENTITEMID,EDITABLE,COMBOID,COMBOGROUPID,ITEMPRICEQTY1,ITEMBASEPRICE,PRICEPREDSCT,TOTALQTY,SALESDSCTAMT,PAYMENTDSCTAMT,TOTALTAX,TOTALITEMPAID,TOTALCOST,NETSALES,NETOPTIONS,PRICELEVELSAVINGS,EXTPRICEDIFF,COMBOSAVINGS,VOIDINFO_TERMID,VOIDINFO_EMPID,VOIDINFO_GMTACTIONTIME,VOIDINFO_LOCALACTIONTIME,VOIDINFO_SHIFTID,VOIDINFO_CLOCKINACTIONID,AUTHEMPID,REASONID,MENUITEMID,CONCEPTID,PRICE,OPENPRICE,MAXOPENPRICE,ITEMS_DETAILS_NAME,PLU,CATID,CATNAME,DISCOUNTCOUNTALLOWED,NUMUNIT,COST,TIMER,TIMERMINMINUTES,TIMERROUNDTO,TIMERROUNDMETHOD,BYWEIGHT,DEFPRINTPRIORITY,DISCOUNTTAGS,PRINTERTYPES,WEIGHTSCALE,WEIGHTSCALEUNIT,DETAILS_ITEMCATEGORYTYPEID,DETAILS_T,TENANTID_DETAILS,STOREID_DETAILS,MAXNUMDISCOUNTS,UPDATECNT,GROUPNAME,GROUPDESC,CATEGORYDESC,ITEMTAX,ITEMTAGS,ITEM_DETAILS_TAXES_VALUE,ITEM_TAXES,DISPLAYNAME,NOTE,SPLITITEMID,WEIGHT,MANUALENTRY,TARENAME,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANSLIST_ITEMS);
create or replace secure view TRANSLIST_ITEMS_CALC_PAYREC(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,TRANSITEMID,PAYREC_TRANSPAYID,PAYREC_PAYMENTCATEGORYID,PAYREC_PAYMENTID,PAYREC_PAYMENTENTID,PAYREC_BRANDID,PAYREC_AMT,PAYREC_PAIDTOTRANSITEMID,PAYREC_TARGETTYPE,PAYREC_ASSOCIATEDSCTID,PAYREC_TRANSDSCTID,PAYREC_ACCTTYPEID,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANSLIST_ITEMS_CALC_PAYREC);
create or replace secure view TRANSLIST_ITEMS_ITEMDISCOUNTS(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,TRANSITEMID,ITEMDISCOUNTS_TRANSDSCTID,ITEMDISCOUNTS_DISCOUNTID,ITEMDISCOUNTS_AMT,ITEMDISCOUNTS_DSCTONGRAT,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANSLIST_ITEMS_ITEMDISCOUNTS);
create or replace secure view TRANSLIST_ITEMS_PAYMENTDISCOUNTS(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,TRANSITEMID,PAYMENTDISCOUNTS_TRANSDSCTID,PAYMENTDISCOUNTS_TRANSPAYID,PAYMENTDISCOUNTS_DISCOUNTID,PAYMENTDISCOUNTS_AMT,PAYMENTDISCOUNTS_DSCTONGRAT,PAYMENTDISCOUNTS_TAXID,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANSLIST_ITEMS_PAYMENTDISCOUNTS);
create or replace secure view TRANSLIST_ITEMS_SINGLEPRICE(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,TRANSITEMID,REASON,ORDER_,TYPE,VALUE,DIFFERENCEAMT,TRIGGERID,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANSLIST_ITEMS_SINGLEPRICE);
create or replace secure view TRANSLIST_PAYMENTS(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,CCTRANSTYPEID,CCRESULTSTATUS,MASKEDCARDNUMBER,EXPDATE,NAMEONCARD,REQUESTAMT,REFERENCEID,INTEGRATED,AUTHCODE,CCTRANSID,MERCHANTCODE,ENTRYMODE,MESSAGE,SIGNATUREREQUIRED,PROVIDERID,PROVIDERRECEIPT,OFFLINE,CURREQUESTTYPE,CARDBRANDID,REQUESTAMOUNT,RETRYATTEMPT,INPUTMETHOD,FORCED,LANG,BATCHSTATUS,CALC_PAIDOFFWHAT_TRANSPAYID,PAIDOFFWHAT_PAYMENTCATEGORYID,PAIDOFFWHAT_PAYMENTID,PAIDOFFWHAT_PAYMENTENTID,PAIDOFFWHAT_BRANDID,PAIDOFFWHAT_AMT,PAIDOFFWHAT_PAIDTOTRANSITEMID,PAIDOFFWHAT_TARGETTYPE,PAIDOFFWHAT_ACCTTYPEID,AMTTOALLOCATE,CALC_AMT,CALC_T,CASHCHANGE,OVERTENDEREDAMT,CALC_CLASS,PAIDOFFWHAT_ASSOCIATEDSCTID,PAIDOFFWHAT_TRANSDSCTID,TRANSPAYID,PAYMENTCATEGORYID,PAYMENTID,PAYMENTENTID,AMT,PAYMENTNAME,CHARGEDTIP,PAYMENTS_TERMID,PAYMENT_EMPID,PAYMENTS_GMTACTIONTIME,PAYMENTS_LOCALACTIONTIME,PAYMENTS_SHIFTID,PAYMENTS_CLOCKINACTIONID,CREDITPAYMENT,BRANDID,PAYMENTS_CLASS,PAYMENTS_T,CASHPAYS_TERMID,CASHPAYS_EMPID,CASHPAYS_GMTACTIONTIME,CASHPAYS_LOCALACTIONTIME,CASHPAYS_SHIFTID,CASHPAYS_CLOCKINACTIONID,CASHPAYS_AMT,CURRENCYNUM,FOREIGNAMT,EXCHANGERATE,PRICEMODATTR_TRANSDSCTID,PRICEMODATTR_DISCOUNTID,ASPAYMENT,CDBATTR_CUSTID,CDBATTR_CDBATTR_ACCTTYPEID,CDBATTR_ACTIONTYPE,CDBATTR_ACCTRECVID,CDBATTR_OPERATION,CDBATTR_TRANSSTATUS,CDBATTR_AUTHMODE,CDBATTR_AUTHTYPE,CDBATTR_FORCED,CDBATTR_CHARGEDTIP,CDBATTR_REQAMT,CDBATTR_DUPLICATE,CDBATTR_PREVAUTHTYPE,CDBATTR_TRANSTYPE,HOMETRANSID,PAIDOFFWHAT_PAIDTOTAXID,PAIDOFFWHAT_PAIDTOTRANSPAYID,CASHPAYS_AUTHEMPID,CBR_ATTR_ACCOUNTTYPENAME,CBR_ATTR_BALANCE,CBR_ATTR_CUSTOMERACCOUNTID,CBR_ATTR_FIRSTNAME,CBR_ATTR_LASTNAME,CBR_ATTR_AUTHEMPID,STATUS,VOID_AUDIT_CLOCKINACTIONID,VOID_AUDIT_EMPID,VOID_AUDIT_GMTACTIONTIME,VOID_AUDIT_LOCALACTIONTIME,VOID_AUDIT_SHIFTID,VOID_AUDIT_TERMID,ALLOWEDPAYMENTTYPEIDS,CREDITPAYMENTENTID,MEALPLANATTR_CUSTID,CUSTTYPEID,MEALPLANID,NOTES,PAYMENTS_ACCLOADAMT,PAYMENTS_PAIDLOADAMT,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANSLIST_PAYMENTS);
create or replace secure view TRANSLIST_PAYMENTS_PAYREC(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,TRANSPAYID,PAYMENTS_PAYREC_AMT,PAYMENTS_PAYREC_BRANDID,PAYMENTS_PAYREC_PAIDTOTRANSPAYID,PAYMENTS_PAYREC_PAYMENTCATEGORYID,PAYMENTS_PAYREC_PAYMENTENTID,PAYMENTS_PAYREC_PAYMENTID,PAYMENTS_PAYREC_TARGETTYPE,PAYMENTS_PAYREC_TRANSPAYID,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANSLIST_PAYMENTS_PAYREC);
create or replace secure view TRANS_LISTS(MASTERTRANSID,STOREID,TRANSLIST_TRANSID,TRANSLIST_TERMID,TRANSLIST_EMPID,TRANSLIST_GMTACTIONTIME,TRANSLIST_LOCALACTIONTIME,TRANSLIST_SHIFTID,TRANSLIST_CLOCKINACTIONID,TRANSLIST_SALETYPEID,TRANSLIST_SEATNUM,TRANSLIST_BILLPRINTED,TRANSLIST_BILLPRINTCOUNT,TRANSLIST_REFUND,TRANSLIST_CUSTID,TRANSLIST_CUSTGIFTID,TRANSLIST_GROSSSALES,TRANSLIST_VOIDS,TRANSLIST_CORRECTIONS,TRANSLIST_SALESDSCT,TRANSLIST_PAYMENTDSCT,TRANSLIST_NETSALES,TRANSLIST_TAXTOTAL,TRANSLIST_GRATUITY,TRANSLIST_LOADAMT,TRANSLIST_TOTALTOPAY,TRANSLIST_TOTALPAID,TRANSLIST_UNPAIDBAL,TRANSLIST_CASHBACKAMT,TRANSLIST_CASHCHANGE,TRANSLIST_CHARGEDTIPSAMT,TRANSLIST_OVERTENDER,TRANSLIST_ROUNDING,TRANSLIST_ITEMCOUNT,TRANSLIST_CDBITEMCOUNT,TRANSLIST_CDBITEMSALES,TRANSLIST_NOSALE,TRANSLIST_ITEMCATSALES,TRANSLIST_ACCOUNTTYPEGROUPID,TRANSLIST_CUSTOMERID,MERGEDWITHTRANSID,REFUNDREFTRANSID,CLOSEDAYID,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANS_LISTS);
create or replace secure view TRANS_MASTER(TENANTID,STOREID,SECTIONID,ISDEL,SPECIALUSEMODE,MASTERTRANSID,POSMODE,POSMODEID,TRANSTYPEID,NAME,HOMETERMID,CLOSEEMPFIRSTNAME,CLOSEEMPLASTNAME,CLOSETERMNAME,CLOSEEMPID,CLOSETERMID,CLOSEDTTM,DEPARTMENTID,TERMID,EMPID,GMTACTIONTIME,LOCALACTIONTIME,SHIFTID,CLOCKINACTIONID,CLOSED,REOPEN,NUMSEATS,HEADCOUNT,HCMAN,MODIFIEDTIME,VERSION,CLOSEDAYID,CLOSEDEPTID,CLOSEDAYPART1,CLOSEDAYPART2,UPDATEOBJ,_T,INSERTOBJ,_CLASS,AUTOCLOSETIME,ETL_EXTRACT_TIMESTAMP,ETL_RECORD_KEY_HASH,ETL_RECORD_DATA_HASH,ETL_RECORD_CREATED_TS,ETL_RECORD_MODIFIED_TS) as (select * from DATAOPS_SOURCE.VOLANTE_MORRISON.TRANS_MASTER);

grant REFERENCE_USAGE on DATABASE DATAOPS_SOURCE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant REFERENCE_USAGE on DATABASE DATAOPS_EDW to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;

grant usage on database COMPASSGROUP_SOURCE_OUTBOUND to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant usage on schema DATASTORE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant usage on schema EATCLUB to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant usage on schema LASERFICHE_EUREST to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant usage on schema POS_ORDERS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant usage on schema VOLANTE_MORRISON to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;

-- grant select on eatclub views
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_ALLERGENS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_AUTH_USER to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_COMPANIES to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_DELIVERY_LOCATIONS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_ITEMS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_ITEMS_ALLERGENS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_ITEMS_TAGS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_LOCATIONS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_MAIN_OPERATOR to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_MAIN_REFUNDCATEGORY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_MAIN_REGION to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_MENUS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_MENUS_ITEMS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_ORDERS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_ORDERS_ITEMS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_REFUNDS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_RESTAURANTS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_REVIEWS_REVIEW to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_TAGS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.EATCLUB.EATCLUB_TAG_TYPES to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;

-- grant select on datastore views
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.DATASTORE.MOBILE_ORDERS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;

-- grant select on laserfiche views
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ACCOUNT_CACHE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ACCOUNT_SECURITY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ACTIVE_DOC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ACTIVITY_LOG to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ALTEDOC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ANNACCESS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ANNHIST to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ANNPOINT to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ANNRECT to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ANN_REASON to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.AUDITLOGS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.AUDITLOG_INDEX to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.AUDIT_REASON_CHOICES to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.BIZPROC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.BIZPROC_ENTITY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.BIZPROC_ENTITY_ENTRY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.BIZPROC_ENTITY_TRUSTEE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.CERTIFICATE_STORE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.COFF to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.COFF_EVENTS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.CUSTOM_AUDIT_REASONS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.DBOPTIONS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.DBPROP to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.DEFAULTACL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.DELETEDELEC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.DELETEDPAGE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.DELETED_VER to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.DISP_SCHED to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.DOC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.DOCUMENT_SIGNATURES to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.DOCUMENT_SIGNATURE_TARGETS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ELECTYPE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ENTRYACL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ENTRY_LINK to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ENTRY_LINK_PROP to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.ENTRY_TAG to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.EVENT_DEF to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.EXTENSION_CACHE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.EXTERNAL_DB to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.FREEZE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.FROZEN to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.GROUPLIST to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.INDEX_QUEUE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.JOURNAL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.JOURNAL_ENTRY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.KEYS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.KEY_PASSWORDS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.LDAP_ALLOW to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.LDAP_DENY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.LDAP_SERVER_PROFILES to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.LFQL_SCHEMA_COLUMNS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.LFQL_SCHEMA_TABLES to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.LFT to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.LINK_TYPE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.LOC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.LOCATION to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.LUP to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.OBJ_PROP to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PASSWORD_HISTORY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PERIOD to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PERIOD_CODE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PLOCK to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PROPACL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PROPDEF to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PROPSET to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PROPVAL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PSETACL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PSET_PROPS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PSET_PROP_GROUP to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PSET_RULE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PSET_RULE_PARENT to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.PSET_RULE_QUERY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.QUERYCONTAIN to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.RECYCLE_BIN to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.RECYCLE_ELEC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.RELEVANCY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.RF_EVENTS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT0 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT1 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT10 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT11 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT12 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT13 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT2 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT3 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT4 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT5 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT6 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT7 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT8 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCHRESULT9 to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SEARCH_PLAN_LIBRARY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SECCLASS_LEVEL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SERIES to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SESS_SID to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.SESS_TAG to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.STAMP to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TAG to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TAGACL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TOCGEO to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TOC_TRANSFERS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TO_RECYCLE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TO_RESTORE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TRANSFER to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TRUSTED_ALLOW to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TRUSTED_DENY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TRUSTED_GROUP to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TRUSTED_LOGIN to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TRUSTEE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TRUSTEE_ATTR to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.TRUSTEE_TAG to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.UAREA_ENTRY to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.UPLOADFILE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.USER_AREA to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.USER_LOGIN to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VERLABEL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VERSION_GROUP to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VERTREE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VHIST_ALTEDOC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VHIST_ANN to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VHIST_ANNACCESS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VHIST_ANNPOINT to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VHIST_ANNRECT to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VHIST_CHANGES to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VHIST_DOC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VHIST_GEO to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VHIST_PROPVAL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VHIST_TOC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VOL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VOLACL to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.VOL_UNAVAILABLE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.WATERMARKS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.WOPI_AT to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.WOPI_LOCK to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.LASERFICHE_EUREST.WOPI_USER_INFO to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;

-- grant select on volante morrison views
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.CUSTOMERS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.CUSTOMERS_ACCTBALLIST to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.MENU_ITEMS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.STORES to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TERMINALS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANSLIST_CALC_TAXES to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANSLIST_CALC_TAXES_PAYREC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANSLIST_COMBOS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANSLIST_DISCOUNTS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANSLIST_ITEMS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANSLIST_ITEMS_CALC_PAYREC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANSLIST_ITEMS_ITEMDISCOUNTS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANSLIST_ITEMS_PAYMENTDISCOUNTS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANSLIST_ITEMS_SINGLEPRICE to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANSLIST_PAYMENTS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANSLIST_PAYMENTS_PAYREC to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANS_LISTS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.VOLANTE_MORRISON.TRANS_MASTER to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;

-- grant select on pos_orders views
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.POS_ORDERS.MOBILE_ORDERS to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;
grant select on view COMPASSGROUP_SOURCE_OUTBOUND.POS_ORDERS.POS_CA to share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND;

alter share CGNA.CDL_DATATECHNOLOGY.CD_COMPASSGROUP_SOURCE_OUTBOUND add account="CGNA.COMPASS_GROUP";

